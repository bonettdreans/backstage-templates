apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: backend-service-template
  title: Backend Service Template
  description: Template para criar um serviço backend com FastAPI
  tags:
    - recommended
    - python
    - fastapi
    - backend
spec:
  owner: bonettdreans
  type: service
  parameters:
    - title: Informações do Serviço
      required:
        - name
        - description
      properties:
        name:
          title: Nome do Serviço
          type: string
          description: Nome único do serviço
          pattern: '^[a-zA-Z0-9\-]+$'
        description:
          title: Descrição
          type: string
          description: Descrição do que o serviço faz
        owner:
          title: Proprietário
          type: string
          description: Proprietário do serviço
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
              - User
    - title: Configurações do Repositório
      required:
        - repoUrl
      properties:
        repoUrl:
          title: URL do Repositório
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: fetch-base
      name: Baixar estrutura
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}

    - id: publish
      name: Publicar no GitHub
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: ${{ parameters.description }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        gitCommitMessage: "Initial commit - Backend service ${{ parameters.name }}"

    - id: register
      name: Registrar no catálogo
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repositório
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Abrir no catálogo
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
